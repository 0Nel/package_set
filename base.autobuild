# IMPORTANT: new packages must be added at the top of this file

#################################################################################"
#################################################################################"
## 
## Do not add anything below this line unless you know what you are doing
## New packages MUST be added at the top of the file
##
#################################################################################"
#################################################################################"

in_flavor 'master' do
end

in_flavor 'master', 'next' do
    cmake_package 'base/console_bridge'
end

in_flavor 'master', 'next', 'stable' do
    ruby_package 'tools/autoproj'
    remove_from_default 'tools/autoproj'
    ruby_package 'tools/autobuild'
    remove_from_default 'tools/autobuild'

    cmake_package 'base/types' do |pkg|
        if package_enabled?('external/sisl')
            pkg.define 'SISL_PREFIX', package('external/sisl').prefix
        end
        Autobuild.env_add_path 'TYPELIB_RUBY_PLUGIN_PATH', File.join(pkg.prefix, "share", "typelib", "ruby")
	pkg.define "RUBY_EXECUTABLE", Autoproj::CmdLine.ruby_executable
    end
    cmake_package 'base/cmake' do |pkg|
        Autobuild.env_add_path 'CMAKE_PREFIX_PATH', pkg.prefix
    end
    import_package 'base/templates/ruby_lib'
    ruby_package 'base/admin_scripts'
    remove_from_default 'base/admin_scripts'

    import_package 'base/doc'
    remove_from_default 'base/doc'

    cmake_package 'base/numeric'

    ruby_package 'base/scripts' do |pkg|
        Autobuild.env_add_path 'ROBY_PLUGIN_PATH', File.join(pkg.srcdir, 'lib', 'rock', 'roby_plugin.rb')
    end

    import_package 'base/templates/cmake_lib' do |pkg|
        env_set "ROCK_TEMPLATE_PREFIX", File.join(File.expand_path('..', pkg.srcdir), '')
        env_set "ROCK_TEMPLATE_SUFFIX", ""
    end

    import_package 'base/templates/cmake_vizkit_widget'
    import_package 'base/templates/vizkit'
    import_package 'base/templates/bundle'
    import_package 'base/templates/doc'

    cmake_package 'eigen3' do |pkg|
        pkg.define "EIGEN_BUILD_PKGCONFIG", "ON"
        env_add 'PKG_CONFIG_PATH', File.join(pkg.prefix, 'share', 'pkgconfig')
    end
    # eigen3 is without prefix, to make transition easier once its 
    # a system package. Should go into external dir, though.
    move_package 'eigen3', 'external'
    remove_from_default 'eigen3'

    # Setup bundle support only if base/scripts is enabled 
    if package_enabled?('base/scripts')
        setup_package 'base/scripts' do |pkg|
            bundle_envsh = File.join(Autoproj.root_dir, '.bundle_env.sh')
            if !File.file?(bundle_envsh)
                File.open(bundle_envsh, "w") do |io|
                    io.puts "# File generated by the bundle-default command"
                    io.puts "# Do not change ! Your changes would be overriden !"
                    io.puts "unset ROCK_BUNDLE"
                end
            end
            Autoproj.env_source_file bundle_envsh

            if Autoproj.shell_helpers? && shell = ENV['SHELL']
                shell_kind = File.basename(shell)
                if shell_kind =~ /^\w+$/
                    shell_file = File.join(pkg.srcdir, "shell", shell_kind)

                    if File.file?(shell_file)
                        Autoproj.env_source_file shell_file
                    else
                        # Wait for having imported the package before we add the
                        # file
                        pkg.post_import do
                            if File.exists?(shell_file)
                                Autoproj.env_source_file shell_file
                            end
                        end
                    end
                end
            end
        end
    end

    cmake_package 'external/sisl' do |pkg|
        pkg.define "BUILD_SHARED_LIBS","ON"
        pkg.doc_task do
            pkg.message "copying HTML documentation from %s"
        end # Nothing to do, SISL ships with the generated documentation
        pkg.doc_dir = File.join(pkg.srcdir, 'doc', 'html')
    end
end

Autoproj.env_inherit 'CMAKE_PREFIX_PATH'

