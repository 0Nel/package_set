in_flavor 'next', 'stable' do
    import_package 'external/sisl' do |pkg|
        pkg.post_install do
            pkg.progress "building %s"
            pkg.run('build', Autobuild.tool(:make), "-j#{pkg.parallel_build_level}", '-C', 'sisl')
            pkg.progress "installing %s"

            include_dir = File.join(pkg.prefix, 'include', 'sisl')
            lib_dir     = File.join(pkg.prefix, 'lib')
            FileUtils.rm_rf include_dir
            FileUtils.mkdir_p File.dirname(include_dir)
            FileUtils.mkdir_p lib_dir

            flavors = %w{opt nopt}
            flavor = flavors.find do |flavor_name|
                File.file?(File.join('sisl', 'lib', "libsisl_#{flavor_name}.so"))
            end
            FileUtils.cp File.join('sisl', 'lib', "libsisl_#{flavor}.so"), File.join(lib_dir, 'libsisl.so')
            FileUtils.cp_r File.join('sisl', 'include'), include_dir
        end
    end

    cmake_package 'base/types' do |pkg|
        if Autobuild::CMake.respond_to?(:module_path)
            Autobuild::CMake.module_path << File.join(pkg.srcdir, "cmake")
        end
        env_set 'ROCK_CMAKE_MACROS', File.join(pkg.srcdir, "cmake")

        if package_enabled?('external/sisl')
            pkg.define 'SISL_PREFIX', package('external/sisl').prefix
        end
    end

    ruby_package 'base/scripts'
    ruby_package 'base/types_ruby' do |pkg|
        Autobuild.env_add_path 'TYPELIB_RUBY_PLUGIN_PATH', File.join(pkg.srcdir, "lib", "base")
    end

    import_package 'base/templates/cmake_lib' do |pkg|
        env_set "ROCK_TEMPLATE_PREFIX", File.expand_path('..', pkg.srcdir)
        env_set "ROCK_TEMPLATE_SUFFIX", ""
    end

    import_package 'base/templates/cmake_vizkit_widget'
    import_package 'base/templates/vizkit'
end

cmake_package 'eigen3' do |pkg|
    pkg.define "EIGEN_BUILD_PKGCONFIG", "ON"
    env_add 'PKG_CONFIG_PATH', File.join(pkg.prefix, 'share', 'pkgconfig')
end
# eigen3 is without prefix, to make transition easier once its 
# a system package. Should go into external dir, though.
move_package 'eigen3', 'external'
