## This file contains the data to handle the migration of 'monolithic
# vizkit' when it got separated into vizkit3d (pure C++) and vizkit (pure Ruby)
only_in_flavor 'master', 'next' do
    ruby_package 'gui/vizkit'

    cmake_package 'gui/vizkit3d' do |pkg|
        if Autoproj.manifest.package_enabled?('rtt', false) # the toolchain is built, add it to the rtt_target
            pkg.define "OROCOS_TARGET", user_config('rtt_target')
        end
        Autoproj.env_add_path 'OSG_FILE_PATH', File.join(pkg.prefix, "share", "vizkit" )

        # Add our prefix to the VIZKIT_PLUGIN_RUBY_PATH. Relevant packages will have
        # to list the place where they install themselves
        # TODO the path should be renamed to VIZKIT3D_PLUGIN_PATH
        Autoproj.env_add_path 'VIZKIT_PLUGIN_RUBY_PATH', File.join(pkg.prefix, 'lib')
        Autoproj.env_add_path 'VIZKIT_PLUGIN_RUBY_PATH', File.join(pkg.prefix, 'lib', 'vizkit')
    end
end

only_in_flavor 'stable' do
    # THIS HAS TO BE MOVED TO ONLY STABLE BEFORE RELEASED
    cmake_package 'gui/vizkit' do |pkg|
        if Autoproj.manifest.package_enabled?('rtt', false) # the toolchain is built, add it to the rtt_target
            pkg.define "OROCOS_TARGET", user_config('rtt_target')
        end
        Autoproj.env_add_path 'OSG_FILE_PATH', File.join(pkg.prefix, "share", "vizkit" )
        Autoproj.env_add_path 'RUBYLIB', File.join(pkg.srcdir,"ruby/lib")
        Autoproj.env_add_path 'RUBYLIB', File.join(pkg.srcdir,"build/lib")
        Autoproj.env_add_path 'PATH', File.join(pkg.srcdir,"bin")
        # Add our prefix to the VIZKIT_PLUGIN_RUBY_PATH. Relevant packages will have
        # to list the place where they install themselves
        Autoproj.env_add_path 'VIZKIT_PLUGIN_RUBY_PATH', File.join(pkg.prefix, 'lib')
        Autoproj.env_add_path 'VIZKIT_PLUGIN_RUBY_PATH', File.join(pkg.prefix, 'lib', 'vizkit')
    end
end


