ruby_package 'tools/oropy_bridge' do |pkg|
    def pkg.update_environment
        super
        Autoproj.env_add_path 'PYTHONPATH', File.join(srcdir, 'python')
        Autoproj.env_add_path 'RUBYLIB', File.join(srcdir, 'ruby', 'lib')
        Autoproj.env_add_path 'PATH', File.join(srcdir, 'bin')
    end

    pkg.post_import do
        if !system('python -c "import msgpack" 2> /dev/null')
            puts "\x1b[31mmsgpack-python is needed for the oropy_bridge - install manually\x1b[0m"
            puts "   [apt-get install python-pip]"
            puts "    pip install --user msgpack-python"
        end
    end

end
remove_from_default 'tools/oropy_bridge'

in_flavor 'master' do 
    orogen_package 'base/orogen/interfaces'
end

in_flavor 'master', 'next' do
    orogen_package 'base/orogen/std'

    ruby_package 'tools/metaruby'
    ruby_package 'tools/syskit' do |pkg|
        def pkg.update_environment
            super
            Autoproj.env_add_path 'ROBY_PLUGIN_PATH', File.join(srcdir, "lib", "syskit", "roby_app/register_plugin.rb")
        end
    end
end

in_flavor 'master', 'next', 'stable' do
    ruby_package  'tools/orocos.rb' do |pkg|
        def pkg.update_environment
            super
            Autobuild.update_environment srcdir
            Autoproj.env_add_path 'ROBY_PLUGIN_PATH', File.join(srcdir, "lib", "orocos", "roby")
            Autoproj.env_set 'ORBInitRef',"NameService=corbaname::127.0.0.1"
        end
    end

    ruby_package 'tools/pocolog'
    orogen_package 'tools/logger'
    orogen_package 'base/orogen/types' do |pkg|
        pkg.orogen_file = "base.orogen"
        if package_selected?('external/sisl')
            pkg.define "SISL_PREFIX", package('external/sisl').prefix
        end
        Autoproj.env_set 'ROCK_PREFIX', File.join(pkg.prefix,'share','rock')

        pkg.remove_obsolete_installed_file "share", "typelib", "ruby", "base.rb"
    end

    ruby_package 'tools/roby' do |pkg|
        pkg.doc_dir = File.join('doc', 'html')
    end

    ruby_package  'tools/log_tools' 
    orogen_package 'tools/port_proxy'
end

only_in_flavor 'master', 'next' do
    remove_from_default 'tools/port_proxy'
end

require 'fileutils'

setup_package('orogen') do |pkg|
    target = user_config('rtt_target')
    pkg.rake_setup_task = "setup[-DCMAKE_INSTALL_PREFIX=#{pkg.prefix} -DOROCOS_TARGET=#{target}]"
end

###
# Tune some things on the RTT
configuration_option 'USE_OCL', 'boolean',
    :default => 'no',
    :doc => [
            "Do you need compatibility with OCL ? (yes or no)",
            "New Rock users that don't need backward compatibility with legacy Orocos components",
            "probably want to say 'no'. Otherwise, say 'yes'.",
            "Saying 'yes' will significantly impact compilation time and the size of the resulting binaries",
            "Please answer 'yes' or 'no'"]

setup_package 'rtt' do |rtt|
    rtt.define "DEFAULT_PLUGIN_PATH", "/"
    rtt.post_import do
        # There was a bug in RTT CMake code that generated the pluginpath.cpp file
        # in the source directory. Delete that file so that the DEFAULT_PLUGIN_PATH
        # change above is effective
        FileUtils.rm_f File.join(rtt.srcdir, "rtt", "plugin", "pluginpath.cpp")
    end
    if rtt.respond_to?(:add_tag)
        rtt.add_tag 'stable'
    end
    if Autoproj.user_config('USE_OCL')
        rtt.define "PLUGINS_ENABLE_SCRIPTING", "ON"
        rtt.define 'ORO_DISABLE_PORT_DATA_SCRIPTING', 'OFF'
        Autobuild::Orogen.default_type_export_policy = 'all'
    else
        rtt.define "PLUGINS_ENABLE_SCRIPTING", "OFF"
        rtt.define 'ORO_DISABLE_PORT_DATA_SCRIPTING', 'ON'
        Autobuild::Orogen.default_type_export_policy = 'used'
        Autobuild::Orogen.orogen_options << "--no-rtt-scripting"
    end
    rtt.disable_doc
end

move_package 'rtt', 'tools'
move_package 'typelib', 'tools'
move_package 'orogen', 'tools'
move_package 'ocl', 'tools'
move_package 'utilmm', 'tools'
move_package 'utilrb', 'tools'
move_package 'log4cpp', 'tools'
move_package 'rtt_typelib', 'tools'

add_packages_to_flavors 'master' => ['orogen', 'rtt', 'utilmm', 'utilrb', 'typelib', 'rtt_typelib']
add_packages_to_flavors 'next'   => ['orogen', 'rtt', 'utilmm', 'utilrb', 'typelib', 'rtt_typelib']
add_packages_to_flavors 'stable' => ['orogen', 'rtt', 'utilmm', 'utilrb', 'typelib', 'rtt_typelib']
if !Autoproj.user_config('USE_OCL')
    remove_from_default 'ocl'
    remove_from_default 'log4cpp'
end

only_in_flavor 'master' do
    setup_package 'ocl' do |pkg|
        pkg.importer.branch = "master"
    end
    setup_package 'log4cpp' do |pkg|
        pkg.importer.branch = "master"
    end
end

Autoproj.env_add_path 'AUTOPROJ_PROJECT_BASE', "#{Autoproj.root_dir}"

