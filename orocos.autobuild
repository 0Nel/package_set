require 'fileutils'
setup_package('orogen') do |pkg|
    target = user_config('rtt_target')
    pkg.rake_setup_task = "setup[-DCMAKE_INSTALL_PREFIX=#{pkg.prefix} -DOROCOS_TARGET=#{target}]"
end


ruby_package  'tools/orocos.rb' do |pkg|
    def pkg.prepare
        super
        Autobuild.update_environment srcdir
        Autoproj.env_add_path 'ROBY_PLUGIN_PATH', File.join(srcdir, "lib", "orocos", "roby")
	Autoproj.env_set 'ORBInitRef',"NameService=corbaname::127.0.0.1"
    end
end

###
# Tune some things on the RTT
rtt = package('rtt')
rtt.define "DEFAULT_PLUGIN_PATH", "/"
rtt.post_import do
    # There was a bug in RTT CMake code that generated the pluginpath.cpp file
    # in the source directory. Delete that file so that the DEFAULT_PLUGIN_PATH
    # change above is effective
    FileUtils.rm_f File.join(rtt.srcdir, "rtt", "plugin", "pluginpath.cpp")
end
if rtt.respond_to?(:add_tag)
    rtt.add_tag 'stable'
end

configuration_option 'USE_OCL', 'boolean',
    :values => ['yes', 'no'],
    :default => 'no',
    :doc => [
        "Do you need compatibility with OCL ? (yes or no)",
        "New Rock users that don't need backward compatibility with legacy Orocos components",
        "probably want to say 'no'. Otherwise, say 'yes'.",
        "Saying 'yes' will significantly impact compilation time and the size of the resulting binaries",
        "Please answer 'yes' or 'no'"]

rtt = package('rtt')
if Autoproj.user_config('USE_OCL')
    rtt.define "PLUGINS_ENABLE_SCRIPTING", "ON"
    Autobuild::Orogen.default_type_export_policy = 'all'
else
    rtt.define "PLUGINS_ENABLE_SCRIPTING", "OFF"
    Autoproj.manifest.add_exclusion 'ocl', "disabled because you answered 'no' to the OCL compatibility question"
    Autobuild::Orogen.default_type_export_policy = 'used'
end


ruby_package 'tools/pocolog'
orogen_package 'tools/logger'
orogen_package 'base/orogen/types' do |pkg|
    pkg.orogen_file = "base.orogen"
    if package_selected?('external/sisl')
        pkg.define "SISL_PREFIX", package('external/sisl').prefix
    end

    pkg.remove_obsolete_installed_file "share", "typelib", "ruby", "base.rb"
end

ruby_package 'tools/roby' do |pkg|
    pkg.doc_dir = File.join('doc', 'html')
end

move_package 'rtt', 'tools'
move_package 'typelib', 'tools'
move_package 'orogen', 'tools'
move_package 'ocl', 'tools'
move_package 'utilmm', 'tools'
move_package 'utilrb', 'tools'
        
Autoproj.env_add_path 'AUTOPROJ_PROJECT_BASE', "#{Autoproj.root_dir}"

